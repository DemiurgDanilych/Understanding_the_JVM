//jdk видит новый класс JvmComprehension и отдаёт его подсистеме загрузчиков классов
// которая находит файл с этим классом на уровне Application Classloader и загружает его в оперативную память.
//Далее происходит Linking (проверяет, что код валиден, подготавливает примитивы и статические поля,
// связывает ссылки на другие классы.
//Затем происходит Initialization и метаданные помещаются в Metaspace.

public class JvmComprehension {
	
	//Открывается новый фрейм в Stack Memory
	public static void main(String[] args) {
		
		// 1. Создаётся локальная переменная i в фрейме main
		int i = 1;
		
		// 2. Встерчается класс который отдаётся для загрузки в систему загрузчиков классов
		// (находит класс Object на уровне Bootstrap ClassLoader).
		// Создаётся новый объек Object в heap (резервируется пямять для этого объекта)
		// и ему присвается ссылка с названием "o" которая находится в главном фрейме main.
		Object o = new Object();
		
		// 3. Встерчается класс который отдаётся для загрузки в систему загрузчиков классов
		// (находит класс Integer на уровне Bootstrap ClassLoader).
		//Создаётся новый объект Integer в heap(резервируется пямять для этого объекта)
		// и ему присваевается ссылка с названием "ii" которая находится в главном фрейме main.
		Integer ii = 2;
		
		// 4. открывается новый фрейм и передаются в него объекты, на которые (в методе)
		// создаются свои ссылки на эти объекты.
		printAll(o, i, ii);
		
		// 7. Встерчается класс который отдаётся для загрузки в систему загрузчиков классов
		//(находит класс System на уровне Bootstrap ClassLoader).
		// у которого вызывается метод "println", открывается новый фрейм,
		// в который передаётся строка "finished" из пула строк.
		// затем выводится на экран.
		System.out.println("finished");
		
		// При выходе из фрейма мы уничтожаем все ссылки и локальные переменные.
		// Затем проходит сборщик мусора который чистит память.
	}
	
	//Открывается вложенный фрейм в который передаются объекты и которым присваиваются свои ссылки для этого метода.
	private static void printAll(Object o, int i, Integer ii) {
		
		//5. Создаётся новый объект Integer в heap(резервируется пямять для этого объекта)
		// и ему присвается ссылка с названием "uselessVar" которая находится во вложенном фрейме printAll.
		Integer uselessVar = 700;
		
		// 6. Встерчается класс который отдаётся для загрузки в систему загрузчиков классов
		// (находит класс System на уровне Bootstrap ClassLoader).
		//  у которого вызывается метод "println" и в котором происходит приведение всех объектов к типу String,
		//  затем результат выводится на экран.
		System.out.println(o.toString() + i + ii);
		
		// При выходе из фрейма мы уничтожаем все ссылки и локальные переменные.
	}
}
